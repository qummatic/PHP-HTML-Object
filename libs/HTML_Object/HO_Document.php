<?php
/**
 * This file contains the code for generating complete HTML Document or a Web Pages
 * 
 * PHP HTML Object is PHP Object Library for making autogenerated HTML code
 * over PHP Programming. Providing the variety of needs to make HTML code
 * automatically, such as HTML Tags, Attributes, Tag's Content, Frequently Used Tags,
 * and Other HTML Object.
 *
 * PHP Versions 5
 *
 * @category    PHP Object
 * @package     HTML Object
 * @author      Abdul Hanan (http://hanan.qummatic.com) Original Author
 * @copyright   2010 bekasi-code.qummatic.com
 * @license     http://www.gnu.org/licenses/lgpl-3.0.txt LGPL Version 3
 * @version     ver 0.1
 * @link        http://bekasi-code.qummatic.com/html-object
 *
 */

/**
 * HTML Document Object Class
 * 
 * Class for generating HTML Document, provides HEAD elements and its contents, and
 * BODY element and its contents
 *
 * @subpackage HTML Document
 * @access  private
 * @version class-ver 0.2-dev
 * @author Abdul Hanan (http://hanan.qummatic.com)
 */
class HO_Document extends HTML_Object
{
    /**#@+*/
    /**
     * @var     object
     * @access  public
     */
    public $head = NULL;
    public $body = NULL;
    /**#@-*/

    /**
     * @var     string
     * @access  private
     */
    private $documentContent;
    
    /**
     * @var     string
     * @access  protected
     */
    public $doctype = 'html5';

    /**
     * Constructor of the container class
     * 
     * Defines a few of the needed object
     *
     * @access public
     */
    public function __construct()
    {
        
    }

    /**
     * Declares Doctype
     *
     * Declares Doctype tag, the types include:
     * - html4.01-transitional : HTML 4.01 Transitional
     * - html4.01-strict: HTML 4.01 Strict
     * - html4.01-frameset: HTML 4.01 Frameset
     * - xhtml1.0-strict: XHTML 1.0 Strict
     * - xhtml1.0-transitional: XHTML 1.0 Transitional
     * - xhtml1.0-frameset: XHTML 1.0 Frameset
     * - xhtml1.1: XHTML 1.1
     * - html5: HTML 5
     * 
     * @access private
     * @return string
     */
    private function doctypeProcess()
    {
        switch ($this->doctype) {
            case "html4.01-strict":
                return '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">';
                break;
            case "html4.01-transitional":
                return '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">';
                break;
            case "html4.01-frameset":
                return '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">';
                break;
            case "xhtml1.0-strict":
                return '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">';
                break;
            case "xhtml1.0-transitional":
                return '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">';
                break;
            case "xhtml1.0-frameset":
                return '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">';
                break;
            case "xhtml1.1":
                return '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">';
                break;
            default:
            case "html5":
                return '<!DOCTYPE HTML>';
                break;
        }
    }

    /**
     * Processes HTML Document
     * 
     * Scripts for processing to create HTML Document.
     * - Generating HEAD element, its attributes and its contents.
     * - Generating BODY element, its attributes and its contents.
     * 
     * @access  private
     * 
     */
    private function process()
    {
        // {{{ assign doctype content
        $doctypeContent = '';
        if (!is_null($this->doctype) && trim($this->doctype)) {
            $doctypeContent = $this->doctypeProcess() ."\n";
        }
        // }}}

        // {{{ assign document head content
        $documentHead = '';
        if (!is_null($this->head) && is_object($this->head)) {
            $documentHead = $this->head->fetch() . "\n";
        }
        // }}}

        // {{{ assign document body content
        $documentBody = '';
        if (!is_null($this->body) && is_object($this->body)) {
            $documentBody = $this->body->fetch() . "\n";
        }
        // }}}
        
        $tagHead = $this->__head();
        $tagHead->innerHTML($documentHead);

        $tagBody = $this->__body();
        $tagBody->innerHTML($documentBody);

        $tagDocument = $this->__html();
        $tagDocument->innerHTML($tagHead->fetch() . $tagBody->fetch() . "\n");
        $this->documentContent = $doctypeContent . $tagDocument->fetch();
    }

    /**
     * Registers Document Head
     *
     * @access public
     */
    public function head()
    {
        $argData = array('doctype'=>$this->doctype);
        $this->head = new HO_Document_Head($argData);
        return $this->head;
    }

    /**
     * Registers Document Body
     *
     * @access public
     */
    public function body()
    {
        $this->body = new HO_Document_Body();
        return $this->body;
    }

    /**
     * Fetches HTML Tag
     * 
     * Returns HTML Document, the result from generating HEAD tags and BODY tags.
     *
     * @access  public
     * @return  string
     */
    public function fetch()
    {
        $this->process();
        return $this->documentContent;
    }

    /**
     * Displays HTML Document
     * 
     * Displays HTML Document, the result from generating HEAD element
     * and BODY element.
     *
     * @access  public
     */
    public function display()
    {
        echo $this->fetch();
    }
}
?>
