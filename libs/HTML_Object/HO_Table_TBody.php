<?php
/**
 * This file contains the code for making table body elements
 *
 * PHP HTML Object is PHP Object Library for making autogenerated HTML code
 * over PHP Programming. Providing the variety of needs to make HTML code
 * automatically, such as HTML Tags, Attributes, Tag's Content, Frequently Used Tags,
 * and Other HTML Object.
 *
 * PHP Versions 5
 *
 * @category    PHP Object
 * @package     HTML Object
 * @author      Abdul Hanan (http://hanan.qummatic.com) Original Author
 * @copyright   2011 bekasi-code.qummatic.com
 * @license     http://www.gnu.org/licenses/lgpl-3.0.txt LGPL Version 3
 * @version     ver 0.2
 * @link        http://bekasi-code.qummatic.com/html-object
 *
 */

/**
 * HTML Table Body Class
 * 
 * This class is used for generating table body element, its attributes,
 * and its contents.
 *
 * @subpackage HTML Table
 * @access  private
 * @version class-ver 0.2
 * @author Abdul Hanan (http://hanan.qummatic.com)
 */
class HO_Table_TBody extends HO_Table
{
    /**
     * @var     object
     * @access  public
     */
    public $row;

    /**#@+*/
    /**
     * @var     array
     * @access  private
     */
    private $arrRow = array();
    private $arrTBody = array();
    private $arrAttributes = array();
    private $arrTableTBody = array();
    /**#@-*/

    /**
     * @var     string
     * @access  private
     */
    private $tableTBody;
    

    /**
     * Constructor of the container class
     * 
     * Assigns table body information into $arrTBody variable
     *
     * @access public
     * @param array $argTBody
     */
    public function __construct($argTBody)
    {
        $this->arrTBody = $argTBody;
    }

    /**
     * Processes Table Body
     * 
     * Scripts for processing to make table body element, its attributes,
     * and its contents
     *
     * @access private
     * @return string
     */
    private function process()
    {
        $tbodyContent = "";
        foreach ($this->arrTableTBody as $value) {
            $tbodyContent .= $value;
        }

        $tagTBody = $this->__tbody($this->arrTBody['id']);
        foreach ($this->arrAttributes as $key => $value) {
            $tagTBody->attribute($key, $value);
        }
        $tagTBody->innerHTML($tbodyContent);
        $this->tableTBody = $tagTBody->fetch();
    }

    /**
     * Defines Table Body Tag Attribute
     * 
     * Assigns an attribute tag for table body tag (<tbody>) and its value
     *
     * @access public
     * @param string $argName
     * @param string $argValue
     */
    public function attribute($argName, $argValue = NULL)
    {
        $this->arrAttributes[$argName] = $argValue;
        return $this;
    }

    /**
     * Defines STYLE Attribute
     * 
     * Assigns style attribute with its value into table body element
     *
     * @access public
     * @param string $argStyle
     */
    public function style($argStyle)
    {
        $this->arrAttributes['style'] = $argStyle;
        return $this;
    }

    /**
     * Registers Row of Table Body Element
     * 
     * Registers row object for making table body's row
     *
     * @access public
     * @param string $argID
     */
    public function row($argID = NULL)
    {
        if (!is_null($argID) && trim($argID))
            $this->arrRow = array('id'=>$argID);
        else
            $this->arrRow = array();

        $this->row = new HO_Table_Row($this->arrRow);
        return $this->row;
    }

    /**
     * Applies Table Body
     * 
     * Applies row into table body element
     *
     * @access public
     */
    public function apply()
    {
        $this->arrTableTBody[] = $this->row->fetch();

        unset($this->row);
    }

    /**
     * Fetches Table Body
     * 
     * Returns table body, its attribute and its contents
     *
     * @access public
     * @return string
     */
    public function fetch()
    {
        $this->process();

        return $this->tableTBody;
    }

    /**
     * Displays Table Body
     *
     * @access public
     */
    public function display()
    {
        echo $this->fetch();
    }
}
?>
