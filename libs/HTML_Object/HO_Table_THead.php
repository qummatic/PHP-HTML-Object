<?php
/**
 * This file contains the code for making table header elements
 *
 * PHP HTML Object is PHP Object Library for making autogenerated HTML code
 * over PHP Programming. Providing the variety of needs to make HTML code
 * automatically, such as HTML Tags, Attributes, Tag's Content, Frequently Used Tags,
 * and Other HTML Object.
 *
 * PHP Versions 5
 *
 * @category    PHP Object
 * @package     HTML Object
 * @author      Abdul Hanan (http://hanan.qummatic.com) Original Author
 * @copyright   2011 bekasi-code.qummatic.com
 * @license     http://www.gnu.org/licenses/lgpl-3.0.txt LGPL Version 3
 * @version     ver 0.2
 * @link        http://bekasi-code.qummatic.com/html-object
 *
 */

/**
 * HTML Table Header class
 * 
 * This class is used for generating table header element, its attributes,
 * and its contents.
 *
 * @subpackage HTML Table
 * @access  private
 * @version class-ver 0.2
 * @author Abdul Hanan (http://hanan.qummatic.com)
 */
class HO_Table_THead extends HO_Table
{
    /**
     * @var     object
     * @access  public
     */
    public $row;

    /**#@+*/
    /**
     * @var     array
     * @access  private
     */
    private $arrRow = array();
    private $arrTHead = array();
    private $arrAttributes = array();
    private $arrTableTHead = array();
    /**#@-*/

    /**
     * @var     string
     * @access  private
     */
    private $tableTHead;


    /**
     * Constructor of the container class
     * 
     * Assigns table header information into $arrTHead property
     *
     * @access public
     * @param array $argTHead
     */
    public function __construct($argTHead)
    {
        $this->arrTHead = $argTHead;
    }

    /**
     * Processes Table Header
     * 
     * Scripts for processing to create table header element, its attributes,
     * and its contents
     *
     * @access private
     * @return string
     */
    private function process()
    {
        $theadContent = "";
        foreach ($this->arrTableTHead as $value) {

            $theadContent .= $value;
        }

        $tagTHead = $this->__thead($this->arrTHead['id']);
        foreach ($this->arrAttributes as $key => $value) {
            $tagTHead->attribute($key, $value);
        }
        $tagTHead->innerHTML($theadContent);
        $this->tableTHead = $tagTHead->fetch();
    }

    /**
     * Defines Table Header Tag Attribute
     * 
     * Assigns an attribute tag for table footer tag (<tfoot>) and its value
     *
     * @access public
     * @param string $argName
     * @param string $argValue
     */
    public function attribute($argName, $argValue)
    {
        $this->arrAttributes[$argName] = $argValue;
        return $this;
    }

    /**
     * Defines STYLE Attribute
     * 
     * Assigns style attribute with its value into table header element
     *
     * @access public
     * @param string $argStyle
     */
    public function style($argStyle)
    {
        $this->arrAttributes['style'] = $argStyle;
        return $this;
    }

    /**
     * Registers Row of Table Header Element
     * 
     * Defines row object for making table header's row
     *
     * @access public
     * @param string $argID
     */
    public function row($argID = NULL)
    {
        if (!is_null($argID) && trim($argID))
            $this->arrRow = array('id'=>$argID);
        else
            $this->arrRow = array('id'=>'table-row');

        $this->row = new HO_Table_Row($this->arrRow);
        return $this->row;
    }

    /**
     * Applies Table Body
     * 
     * Applies row into table header element
     *
     * @access public
     */
    public function apply()
    {
        $this->arrTableTHead[] = $this->row->fetch();

        unset($this->row);
    }

    /**
     * Fetches Table Body
     * 
     * Returns table header, its attribute and its contents
     *
     * @access public
     * @return string
     */
    public function fetch()
    {
        $this->process();

        return $this->tableTHead;
    }

    /**
    * Displays Table Header
     *
     * @access public
     */
    public function display()
    {
        echo $this->fetch();
    }
}
?>
