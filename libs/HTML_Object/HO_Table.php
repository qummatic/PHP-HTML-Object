<?php
/**
 * This file contains the code for creating HTML Table Object
 *
 * PHP HTML Object is PHP Object Library for making autogenerated HTML code
 * over PHP Programming. Providing the variety of needs to make HTML code
 * automatically, such as HTML Tags, Attributes, Tag's Content, Frequently Used Tags,
 * and Other HTML Object.
 *
 * PHP Versions 5
 *
 * @category    PHP Object
 * @package     HTML Object
 * @author      Abdul Hanan (http://hanan.qummatic.com) Original Author
 * @copyright   2010 bekasi-code.qummatic.com
 * @license     http://www.gnu.org/licenses/lgpl-3.0.txt LGPL Version 3
 * @version     ver 0.1
 * @link        http://bekasi-code.qummatic.com/html-object
 *
 */

/**
 * HTML Table Object Class
 * 
 * Generating HTML Table Object, includes:
 * - Table's Head element, its attributes, and its contents.
 * - Table's Body element, its attributes, and its contents.
 * - Table's Foot element, its attributes, and its contents.
 * - Table's Row element, its attributes, and its contents.
 * - Table's Coloum element, its attributes, and its contents.
 *
 * @subpackage HTML Table
 * @access private
 * @version class-ver 0.1.1
 * @author Abdul Hanan (http://hanan.qummatic.com)
 */
class HO_Table extends HTML_Object
{
    /**#@+*/
    /**
     * @var     object
     * @access  public
     */
    public $row;
    public $thead;
    public $tbody;
    public $tfoot;
    /**#@-*/

    /**#@+*/
    /**
     * @var     array
     * @access  private
     */
    private $arrTableRow = array();
    private $arrTHead = array();
    private $arrTBody = array();
    private $arrTFoot = array();
    private $arrAttributes = array();
    /**#@-*/

    /**
     * @var     string
     * @access  private
     */
    private $tableContent;

    /**
     * Constructor of the container class
     *
     * @access public
     */
    public function __construct()
    {
        
    }

    /**
     * Processes Table Object
     * 
     * Script for processing to create Table Object
     *
     * @access private
     */
    private function process()
    {
        $tableTHeadContent = "";
        $tableTBodyContent = "";
        $tableTFootContent = "";
        $tableRowContent = "";

        if ($this->thead) {
            $tableTHeadContent = "\t".$this->thead->fetch();
        }
        
        if ($this->tbody) {
            $tableTBodyContent = "\t".$this->tbody->fetch();
        }
        
        if ($this->arrTableRow) {
            foreach ($this->arrTableRow as $value) {
                $tableRowContent .= "\t".$value;
            }
        }

        if ($this->tfoot) {
            $tableTFootContent = "\t".$this->tfoot->fetch();
        }
        
        $tagTable = $this->__table();
        foreach ($this->arrAttributes as $key => $value) {
            $tagTable->attribute($key, $value);
        }
        $tagTable->innerHTML($tableTHeadContent.$tableTBodyContent.$tableRowContent.$tableTFootContent);
        $this->tableContent = $tagTable->fetch();
    }

    /**
     * Defines Attribute of Table tag
     *
     * Defines attribute of table tag with assigning array of arrAttributes variable
     *
     * @access public
     * @param string $argName
     * @param string $argValue
     */
    public function attribute($argName, $argValue = NULL)
    {
        $this->arrAttributes[$argName] = $argValue;
    }

    /**
     * Defines ID Attribute in Table Tag
     *
     * @access public
     * @param string $argValue
     */
    public function id($argValue)
    {
        $this->arrAttributes['id'] = $argValue;
    }

    /**
     * Defines NAME Attribute in Table Tag
     *
     * @access public
     * @param string $argValue
     */
    public function name($argValue)
    {
        $this->arrAttributes['name'] = $argValue;
    }

    /**
     * Defines CLASS Attribute in Table Tag
     *
     * @access public
     * @param string $argValue
     */
    public function setClass($argValue)
    {
        $this->arrAttributes['class'] = $argValue;
    }

    /**
     * Defines NAME Attribute in Table Tag
     * 
     * @access public
     * @param string $argStyle
     */
    public function style($argStyle)
    {
        $this->arrAttributes['style'] = $argStyle;
    }

    /**
     * Defines Row Object
     * 
     * Defines row object for making table row
     * 
     * @access public
     * @param string $argID
     */
    public function row($argID = NULL)
    {
        if (!is_null($argID) && trim($argID))
            $this->arrRow = array('id'=>$argID);
        else
            $this->arrRow = array('id'=>'table-row');

        $this->row = new HO_Table_Row($this->arrRow);
    }

    /**
     * Applies Table Row
     * 
     * Applies table row into table element
     *
     * @access public
     */
    public function apply()
    {
        $this->arrTableRow[] = $this->row->fetch();

        unset($this->row);
    }

    /**
     * Defines Table Header
     * 
     * Assigns thead object for making Table Header
     * 
     * @access public
     * @param string $argID
     */
    public function thead($argID = NULL)
    {
        if (!is_null($argID) && trim($argID))
            $this->arrTHead = array('id'=>$argID);
        else
            $this->arrTHead = array('id'=>'table-head');

        $this->thead = new HO_Table_THead($this->arrTHead);
    }

    /**
     * Defines Table Body
     * 
     * Assigns tbody object for making Table Body
     *
     * @access public
     * @param string $argID
     */
    public function tbody($argID = NULL)
    {
        if (!is_null($argID) && trim($argID))
            $this->arrTBody = array('id'=>$argID);
        else
            $this->arrTBody = array('id'=>'table-body');

        $this->tbody = new HO_Table_TBody($this->arrTBody);
    }

    /**
     * Defines Table Footer
     * 
     * Assigns tfoot object for making Table Footer
     *
     * @access public
     * @param string $argID
     */
    public function tfoot($argID = NULL)
    {
        if (!is_null($argID) && trim($argID))
            $this->arrTFoot = array('id'=>$argID);
        else
            $this->arrTFoot = array('id'=>'table-foot');

        $this->tfoot = new HO_Table_TFoot($this->arrTFoot);
    }

    /**
     * Fetches HTML Table
     * 
     * Returns HTML Table, its attribute and its contents
     * 
     * @access public
     * @return string
     */
    public function fetch()
    {
        $this->process();

        return $this->tableContent;
    }

    /**
     * Displays HTML Table
     *
     * @access public
     */
    public function display()
    {
        echo $this->fetch();
    }
}
?>
